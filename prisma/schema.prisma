generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  extensions        = [uuid_ossp(map: "uuid-ossp", schema: "xata"), vector]
}

model User {
  id             String   @id @unique(map: "User__pgroll_new_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  email          String   @unique
  first_name     String
  last_name      String
  avatar         String?
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt
  Cases          Case[]
  Clients        Client[]
  // Xata
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "User__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))

  @@index([email])
  @@index([id])
}

model Case {
  id             String      @id @unique @default(uuid())
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now()) @updatedAt
  client_id      String      @unique
  user_id        String
  case_number    String
  court          Court       @relation(fields: [courtId], references: [id])
  // Xata
  xata_id        String      @unique(map: "Case__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int         @default(0)
  xata_createdat DateTime    @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime    @default(now()) @db.Timestamptz(6)
  parties        Party[]
  case_files     Case_File[]
  user           User        @relation(fields: [user_id], references: [id])
  client         Client      @relation(fields: [client_id], references: [id], onDelete: Cascade)
  courtId        String

  @@index([id])
  @@index([user_id])
  @@index([client_id])
}

model Party {
  id               String   @id @unique @default(uuid())
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt
  first_name       String?
  last_name        String?
  business_name    String?
  telephone        String?
  address1         String?
  address2         String?
  city             String?
  state            String?
  email            String?
  is_business      Boolean  @default(false)
  is_dismissed     Boolean  @default(false)
  has_counsel      Boolean  @default(false)
  is_client        Boolean  @default(false)
  is_plaintiff     Boolean  @default(false)
  has_been_deposed Boolean  @default(false)
  service_agent    String?
  service_address1 String?
  service_address2 String?
  service_city     String?
  service_state    String?
  case_id          String
  case             Case     @relation(fields: [case_id], references: [id], onDelete: Cascade)
  // Xata
  xata_id          String   @unique(map: "Party__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version     Int      @default(0)
  xata_createdat   DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat   DateTime @default(now()) @db.Timestamptz(6)

  @@index([id])
  @@index([case_id])
}

model Court {
  id             String   @id @unique @default(uuid())
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt
  name           String
  telephone      String
  address1       String
  address2       String?
  zipcode        String
  city           String
  state          String
  email          String?
  // Xata
  xata_id        String   @unique(map: "Court__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Case           Case[]

  @@index([id])
}

model Client {
  id             String   @id @unique @default(uuid())
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt
  first_name     String
  last_name      String
  email          String   @unique
  telephone      String
  attorney_id    String
  // Xata
  xata_id        String   @unique(map: "Client__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  case           Case?
  attorney       User     @relation(fields: [attorney_id], references: [id], onDelete: Cascade)

  @@index([id])
  @@index([attorney_id])
}

model Case_File {
  id             String   @id @unique @default(uuid())
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt
  uploaded_by    String
  type           String?
  case_id        String
  file_name      String
  extension      String
  is_summarized  Boolean  @default(false)
  summary        Json?
  parsed_text    Json?
  document       Json
  embedding      Float[]
  vectors_id     String?
  case           Case     @relation(fields: [case_id], references: [id], onDelete: Cascade)
  Vectors        Vectors? @relation(fields: [vectors_id], references: [id])
  // Xata
  xata_id        String   @unique(map: "Case_File__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)

  @@index([id])
  @@index([case_id])
}

model Vectors {
  id             String                 @id @default(uuid())
  created_at     DateTime               @default(now())
  updated_at     DateTime               @updatedAt
  embedding      Unsupported("vector")?
  content        String
  xata_createdat DateTime               @default(now()) @db.Timestamptz(6)
  xata_id        String                 @unique(map: "Vectors__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_updatedat DateTime               @default(now()) @db.Timestamptz(6)
  xata_version   Int                    @default(0)
  case_file      Case_File[]

  @@index([id])
}
