generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model messages {
  text           String
  author         String
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "_pgroll_users_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
}

model users {
  id             String   @id @unique
  email          String   @unique
  first_name     String
  last_name      String
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "users__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  cases          cases[]
  clients        client[]
}

model cases {
  id             String        @id @unique @default(uuid())
  createdAt      DateTime      @default(now()) @db.Timestamptz(6)
  fileHash       String?
  fileUrl        String?
  owner          String?
  xata_id        String        @unique(map: "cases__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int           @default(0)
  xata_createdat DateTime      @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime      @default(now()) @db.Timestamptz(6)
  clientId       String
  attorneyId     String
  case_number    String
  court          String?
  defendants     String[]
  plaintiffs     String[]
  case_docs      case_docs[]
  case_files     case_files[]
  summary        case_summary?
  attorney       users         @relation(fields: [attorneyId], references: [id])
  client         client        @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model case_summary {
  id                Int      @id @unique @default(autoincrement())
  analysis          String
  backgroundFacts   String
  authoringJudges   String[]
  court             String
  plaintiffs        String[]
  defendants        String[]
  jurisdiction      String
  courtHoldings     String[]
  lowerCourtHolding String
  caseId            String   @unique
  xata_id           String   @unique(map: "case_summary__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version      Int      @default(0)
  xata_createdat    DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat    DateTime @default(now()) @db.Timestamptz(6)
  case_number       String
  case              cases    @relation(fields: [caseId], references: [id])
}

model client {
  id             String   @id @unique @default(uuid())
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @db.Timestamptz(6)
  first_name     String
  last_name      String
  email          String   @unique
  telephone      String
  attorneyId     String
  xata_id        String   @unique(map: "clients__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  cases          cases[]
  attorney       users    @relation(fields: [attorneyId], references: [id])
}

model case_files {
  id             String   @id @unique @default(uuid())
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @db.Timestamptz(6)
  type           String?
  caseId         String
  fileName       String
  extension      String
  summarized     Boolean  @default(false)
  summary        String?
  xata_id        String   @unique(map: "case_files__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  document       Json
  case           cases    @relation(fields: [caseId], references: [id], onDelete: Cascade)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model case_docs {
  xata_id        String   @unique(map: "_pgroll_new_case_docs_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  document       Json?
  type           String?
  caseId         String?
  case           String?
  extension      String?
  fileName       String?
  parsedText     Json?
  summary        Json?
  cases          cases?   @relation(fields: [case], references: [xata_id], onDelete: Cascade, onUpdate: NoAction, map: "case_link")
}
