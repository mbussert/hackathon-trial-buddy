// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "case_docs",
    columns: [
      {
        name: "case",
        type: "link",
        link: { table: "cases" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "caseId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "document",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "extension",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "fileName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "parsedText",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "summary",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "case_files",
    columns: [
      {
        name: "caseId",
        type: "link",
        link: { table: "cases" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "createdAt",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "document",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "extension",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "fileName",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "summarized",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
      },
      {
        name: "summary",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "updatedAt",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_createdat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "case_summary",
    columns: [
      {
        name: "analysis",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "authoringJudges",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "backgroundFacts",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "caseId",
        type: "link",
        link: { table: "cases" },
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "case_number",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "court",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "courtHoldings",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "defendants",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue:
          "nextval('bb_5gg2clt7u55i9677f7b8c6foek_tj3m3g.case_summary_id_seq'::regclass)",
      },
      {
        name: "jurisdiction",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "lowerCourtHolding",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "plaintiffs",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "cases",
    columns: [
      {
        name: "attorneyId",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "case_number",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "clientId",
        type: "link",
        link: { table: "client" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "court",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "createdAt",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "defendants",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "fileHash",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "fileUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "owner",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "plaintiffs",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "client",
    columns: [
      {
        name: "attorneyId",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "createdAt",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "email",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "first_name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "last_name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "telephone",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "updatedAt",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_createdat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "messages",
    columns: [
      {
        name: "author",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "text",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "timestamp(6) with time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "users",
    columns: [
      {
        name: "email",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "first_name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "last_name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type CaseDocs = InferredTypes["case_docs"];
export type CaseDocsRecord = CaseDocs & XataRecord;

export type CaseFiles = InferredTypes["case_files"];
export type CaseFilesRecord = CaseFiles & XataRecord;

export type CaseSummary = InferredTypes["case_summary"];
export type CaseSummaryRecord = CaseSummary & XataRecord;

export type Cases = InferredTypes["cases"];
export type CasesRecord = Cases & XataRecord;

export type Client = InferredTypes["client"];
export type ClientRecord = Client & XataRecord;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  case_docs: CaseDocsRecord;
  case_files: CaseFilesRecord;
  case_summary: CaseSummaryRecord;
  cases: CasesRecord;
  client: ClientRecord;
  messages: MessagesRecord;
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Michael-Bussert-s-workspace-tj3m3g.us-east-1.xata.sh/db/trial-buddy-dev",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
